@page "/todolist"

@using Asyvix.BlazorExample.SimpleTodo.Data

<h3>TodoList</h3>
<input @bind="_itxTodoContent" @onkeydown="itxTodoContent_OnKeyDown" @oninput="(x) => { _currentValue = (string)x.Value; }"/>
<div class="btn btn-lg btn-primary">새로운 아이템</div>
<table>
    @foreach (var todo in _todoItems)
    {
        @if (!todo.IsComplete)
        {
            <tr>
                <td>
                    <input type="checkbox" @bind="@todo.IsComplete" @onclick="async eventArgs => { await CompleteTodo(todo); }" />
                </td>
                <td>@todo.Content</td>
            </tr>
        }
    }
</table>
<h3>대충완료목록</h3>
<table>
    @foreach (var todo in _todoItems)
    {
        @if (todo.IsComplete)
        {
            <tr>
                <td>
                    <input type="checkbox" @bind="@todo.IsComplete" @onclick="async eventArgs => { await CompleteTodo(todo); }" />
                </td>
                <td class="text-success">@todo.Content</td>
            </tr>
        }
    }
</table>
@code {
    private string _itxTodoContent { get; set; }
    //조합형글자는 OnChange에서 직접 주면 문제가 있어서 따로 불러와야함.
    private string _currentValue { get; set; }
    private List<TodoItem> _todoItems = new List<TodoItem>();

    private void itxTodoContent_OnKeyDown(KeyboardEventArgs e)
    {

        if(e.Key.ToLower() == "Enter".ToLower())
        {
            _todoItems.Add(new TodoItem { Content = _currentValue });
            _itxTodoContent = string.Empty;
        }
    }

    private async Task CompleteTodo(TodoItem todo)
    {

        if (todo.IsComplete == false)
        {
            await (FakeUpdateTodoItem(todo));
        }

        base.StateHasChanged();
    }

    private Task FakeUpdateTodoItem(TodoItem todo)
    {
        return Task.FromResult(0);
    }

}
